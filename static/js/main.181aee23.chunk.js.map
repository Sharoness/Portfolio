{"version":3,"sources":["Header.jsx","About.jsx","Project.jsx","ProjectsSection.jsx","App.jsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","title","width","textAlign","background","border","borderRadius","boxShadow","height","fontSize","color","marginTop","marginBottom","item","flexBasis","Header","classes","className","Typography","variant","display","flexDirection","flexWrap","justifyContent","alignItems","alignContent","profile","maxWidth","media","text","itemAlign","flexGrow","paddingTop","paddingLeft","link","root","About","useState","user","setUser","useEffect","fetch","then","response","json","data","Paper","elevation","Card","CardActionArea","CardMedia","image","avatar_url","CardContent","gutterBottom","component","name","style","marginLeft","href","html_url","target","rel","location","paragraph","projectItem","alignSelf","padding","projectItemTwo","textDecoration","smartphone","position","iframe","minHeight","titleLink","Project","src","process","alt","Link","projects","ProjectsSection","theme","createMuiTheme","typography","fontFamily","join","headerFont","container","backgroundColor","containerComponent","App","ThemeProvider","Container","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.181aee23.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    title: {\r\n        width: \"100vw\",\r\n        textAlign: \"center\",\r\n        background: \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: \"0 3px 5px 2px rgba(33, 203, 243, .3)\",\r\n        height: \"30vh\",\r\n        '& h1': {\r\n          fontSize: \"10vh\",\r\n          color: \"white\",\r\n          marginTop: \"30px\",\r\n          marginBottom: \"10px\"\r\n        },\r\n        '& h2': {\r\n          fontSize: \"5vh\",\r\n          color: \"white\"\r\n        },\r\n    },\r\n    item: {\r\n        flexBasis: \"auto\",\r\n        marginBottom: \"30px\",    \r\n    },\r\n})\r\n\r\nfunction Header() {\r\n  const classes = useStyles();\r\n  return (\r\n    \r\n    <div className={`${classes.item} ${classes.title}`}>\r\n      <Typography variant=\"h1\">Portfolio</Typography>\r\n      <Typography variant=\"h2\">Sharon Grashuis</Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Paper, Typography } from '@material-ui/core';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nconst useStyles = makeStyles({\r\n    item: {\r\n        flexBasis: \"auto\",\r\n        marginBottom: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"space-evenly\",\r\n        alignItems: \"flex-start\",\r\n        alignContent: \"space-evenly\",\r\n    },\r\n    profile: { // flexbox item card\r\n        maxWidth: \"300px\",\r\n        marginBottom: \"30px\"\r\n    },\r\n    media: { // avatar\r\n        width: \"300px\",\r\n        height: \"300px\"\r\n    },\r\n    text: { // flexbox item text\r\n        maxWidth: \"800px\",\r\n        itemAlign: \"center\",\r\n        flexGrow: \"2\",\r\n        paddingTop: \"10px\",\r\n        paddingLeft: \"10px\",\r\n        fontSize: \"20px\"\r\n    },\r\n    link: {\r\n    },\r\n    root: { // github icon\r\n        color: \"black\",\r\n    }\r\n})\r\n\r\nfunction About() {\r\n  const classes = useStyles();\r\n\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n        fetch('https://api.github.com/users/sharoness')\r\n            .then(response => response.json())\r\n            .then(data => setUser(data));\r\n    }, [])\r\n \r\n    \r\n  return (\r\n    <div className={classes.item}>\r\n        <Paper elevation={4} className={classes.profile}>\r\n            <Card variant=\"outlined\">\r\n                <CardActionArea>\r\n                    <CardMedia \r\n                        className={classes.media} \r\n                        image={user.avatar_url} \r\n                        title=\"avatar\" \r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {user.name}<a style={{marginLeft: \"60px\"}} href={user.html_url} target=\"_blank\" rel=\"noopener noreferrer\"><GitHubIcon classes={{root: classes.root}} /></a>\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            Location: {user.location}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n        </Paper>\r\n        <Typography paragraph className={classes.text}>\r\n            Hello! My name is Sharon, I am a Dutch Front End Web Developer living in London.<br />\r\n\r\n            Since July 2019 I have been learning web development via FreeCodeCamp, under guidance of an experienced full-stack web developer.<br />\r\n            The technologies I have learned through FreeCodeCamp and by myself, are <b>React</b>, <b>JavaScript</b>, <b>HTML</b>, <b>CSS</b>, <b>HTTP</b>, <b>Git</b>, <b>Node</b>, <b>Package Managers</b>, <b>Web Bundlers</b> and <b>Docker</b>.<br />\r\n            I have obtained the FreeCodeCamp certificates for <a href=\"https://www.freecodecamp.org/certification/sharoness/responsive-web-design\" target=\"_blank\" rel=\"noopener noreferrer\" className={classes.link}>Responsive Web Design</a>, <a href=\"https://www.freecodecamp.org/certification/sharoness/javascript-algorithms-and-data-structures\" target=\"_blank\" rel=\"noopener noreferrer\" className={classes.link}>JavaScript Algorithms and Data Structures</a>, and <a href=\"https://www.freecodecamp.org/certification/sharoness/front-end-libraries\" target=\"_blank\" rel=\"noopener noreferrer\" className={classes.link}>Front End Libraries</a>.<br />\r\n            In order to obtain these certificates, I had to make projects and pass their unit tests.<br />\r\n            The ones that I'm most proud of, are shown below. They are all made with <b>React</b>.<br />\r\n            To see that I passed the unit tests, click on the hamburger menu, select the right name in the Test Suite and press Run Tests. To see a project in full screen, click on its title below. To see more of my projects, click on the GitHub icon next to my name.\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    projectItem: {\r\n        alignSelf: \"center\",\r\n        padding: \"20px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginBottom: \"50px\",\r\n    },\r\n    projectItemTwo: {\r\n        textDecoration: \"none\",\r\n        color: \"black\",\r\n    },\r\n    smartphone: {\r\n        maxWidth: \"300px\",\r\n        position: \"relative\",\r\n    },\r\n    iframe: {\r\n        position: \"absolute\",\r\n        maxWidth: \"280px\",\r\n        minHeight: \"424px\",\r\n        marginTop: \"-14px\",\r\n        marginLeft: \"-1px\",\r\n        border: \"none\",\r\n    },\r\n    titleLink: {\r\n        fontSize: \"20px\"\r\n    }\r\n})\r\n\r\nfunction Project({link, title}) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.projectItem}>\r\n        <img src={`${process.env.PUBLIC_URL}/smartphone_black.svg`} alt=\"smartphone\" className={`${classes.smartphone} ${classes.projectItemTwo}`}></img>\r\n        <iframe src={link} title={title} className={`${classes.iframe} ${classes.projectItemTwo}`} />\r\n        <Typography>\r\n            <Link href={link} target=\"_blank\" rel=\"noopener noreferrer\" className={`${classes.titleLink} ${classes.projectItemTwo}`}>{title}</Link>\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n","import React from 'react';\r\nimport Project from './Project.jsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    projects: {\r\n      flexBasis: \"auto\",\r\n      marginBottom: \"30px\",\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      flexWrap: \"wrap\",\r\n      justifyContent: \"space-evenly\",\r\n      alignItems: \"center\",\r\n    },\r\n})\r\n\r\nfunction ProjectsSection() {\r\n  const classes = useStyles();\r\n  return (\r\n        <div className={classes.projects}>\r\n            <Project link={\"https://sharoness.github.io/freecodecamp_React_P4_JS_Calculator_Functional/\"} title={\"JavaScript Calculator\"}/>\r\n            <Project link={\"https://sharoness.github.io/freecodecamp_React_P5_Pomodoro_Clock/\"} title={\"Pomodoro Clock\"} />\r\n            <Project link={\"https://sharoness.github.io/freecodecamp_React_P1_Quotes/\"} title={\"Random Quote Machine\"} />\r\n            <Project link={\"https://sharoness.github.io/freecodecamp_React_P2_Markdown_Previewer/\"} title={\"Markdown Previewer\"} />\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default ProjectsSection;\r\n","import React from 'react';\nimport Header from './Header.jsx';\nimport About from './About.jsx';\nimport ProjectsSection from './ProjectsSection.jsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      \"Darker Grotesque\",\n      \"sans-serif\"\n    ].join(\",\"),\n  }\n})\n\nconst headerFont = createMuiTheme({\n  typography: {\n    fontFamily: [\n      \"Kumbh Sans\",\n      \"sans-serif\"\n    ].join(\",\"),\n  }\n})\n\nconst useStyles = makeStyles({\n  container: {\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#f5f5f5\",\n  },\n  containerComponent: {\n    maxWidth: \"xl\",\n  }\n})\n\nfunction App() {\n  const classes = useStyles();\n  return (\n      <div className={classes.container}>\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={headerFont}>\n          <Header />\n        </ThemeProvider>\n        <Container className=\"containerComponent\">\n          <About />\n          <ProjectsSection />\n        </Container>\n        </ThemeProvider>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}